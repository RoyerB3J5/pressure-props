---
import { Icon } from 'astro-icon/components';
import en from '../../../i18n/en';
import es from '../../../i18n/es';
import Layout from '../../../layouts/Layout.astro';
import ContactInfo from '../../../sections/services/ContactInfo.astro';
import type { Language } from '../../../types/language.type';
import Project from '../../../sections/main/Project.astro';

export function getStaticPaths() {
  const services = ['residential', 'commercial', 'car-wash'];
  const languages = ['es', 'en'];

  return languages.flatMap(lang =>
    services.map(service => ({
      params: { lang, service },
    }))
  );
}

export const defaultRedirect = '/en';

const { lang, service } = Astro.params as { lang: Language; service: string };
const translations = { es, en };
const t = translations[lang];

// Obtener los datos del servicio especÃ­fico
const serviceData = t.services[service as keyof typeof t.services];
const items = serviceData.list;
const isTwoCols = items.length > 5;
let columns = [];

if (isTwoCols) {
  columns = [items.slice(0, 5), items.slice(5, 10)];
} else {
  columns = [items];
}
---

<Layout lang={lang} t={t}>
  <section class="py-[160px] md:pt-[285px] md:pb-[185px] flex flex-col justify-center items-center w-full relative overflow-hidden px-4 md:px-0">
    <img src={`/${service}.webp`} alt="Fondos de servicios" width="3072" height="4096" class="absolute inset-0 w-full h-full object-cover -z-20" loading="lazy" decoding="async">
    <div class="flex flex-col justify-center items-center gap-2 md:gap-8">
      <h1 class="text-[32px] md:text-[75px] font-semibold leading-[46px] md:leading-[77px] text-center text-white " set:html={serviceData.title} data-aos="flip-down"></h1>
    </div>
  </section>
  <section class="max-w-screen lg:max-w-[1058px] px-4 lg:px-0 mx-auto flex flex-col lg:flex-row justify-center items-center lg:items-start gap-[30px] lg:gap-[110px] pt-[38px] md:pt-[73px] pb-[42px] md:pb-[51px]" data-aos="zoom-in-up" data-aos-offset="200">
    <p set:html={serviceData.description} class="text-[13px] md:text-[16px] font-normal leading-[20px] md:leading-[25px] max-w-none lg:max-w-[486px] text-secondary"></p>
    <div class={`block ${isTwoCols ? 'grid grid-cols-2 gap-[3px] md:gap-[6px] items-start' : 'grid grid-cols-1 gap-4'}`}>
  {columns.map((col) => (
    <div class="flex flex-col justify-center items-start gap-[6px]">
      {col.map((item) => (
        <div class="flex justify-start items-center gap-[7px] md:gap-4 w-full">
          <Icon name="check" class="h-[32px] md:h-[44px] w-[32px] md:w-[44px] shrink-0 text-main" />
          <p class="text-[12px] md:text-[16px] font-medium leading-[25px] text-secondary">
            {item}
          </p>
        </div>
      ))}
    </div>
  ))}
</div>
  </section>
  <ContactInfo formType={serviceData.image}/>
  <Project content={serviceData.project}/>
</Layout>